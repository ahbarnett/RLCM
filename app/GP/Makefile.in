LINKER     =
CXXFLAGS   = -O2 -Wall -std=c++0x
OBJS       = GP_Common.o
LIBS       = -lcmatrix -lm -lstdc++
LIB_PATHS  = -L${CMATRIX_DIR}/lib
INCL_PATHS = -I${CMATRIX_DIR}/include
EXES       =

ifeq ($(SYS),LINUX)
LIBS += -lrt
endif

ifeq ($(USE_OPENBLAS),1)
CXXFLAGS += -DUSE_OPENBLAS
INCL_PATHS += ${OPENBLAS_INCL_PATH}
else ifeq ($(USE_ESSL),1)
CXXFLAGS += ${ESSL_CXXFLAGS}
INCL_PATHS += ${ESSL_INCL_PATH}
else ifeq ($(USE_MKL),1)
CXXFLAGS += ${MKL_CXXFLAGS}
endif

ifeq ($(USE_OPENMP),1)
CXXFLAGS += -DUSE_OPENMP
ifeq ($(USE_MKL),0)
CXXFLAGS += -fopenmp
endif
endif

ifeq ($(USE_OPENBLAS),1)
LIBS += ${OPENBLAS_LIBS} -lpthread -lgfortran
LIB_PATHS += ${OPENBLAS_LIB_PATH}
else ifeq ($(USE_ESSL),1)
LIBS += ${ESSL_LIBS}
LIB_PATHS += ${ESSL_LIB_PATH}
else ifeq ($(USE_MKL),1)
LIBS += ${MKL_LIBS}
else ifeq ($(USE_OPENMP),1)
LIBS += -llapack -lblas -lgomp
else
LIBS += -llapack -lblas
endif

ifeq ($(USE_LONG),1)
CXXFLAGS += -DUSE_LONG
endif

ifeq ($(HAS_METIS),1)
CXXFLAGS += -DHAS_METIS
INCL_PATHS += ${METIS_INCL_PATH}
LIBS += -lmetis
LIB_PATHS += ${METIS_LIB_PATH}
endif

ifeq ($(USE_MATERN),1)
LINKER += ${FC}
CXXFLAGS += -DUSE_MATERN
EXES += GP_Standard.ex \
        GP_RLCM.ex \
        GP_Standard_TestFunction.ex \
        GP_RLCM_TestFunction.ex \
        GP_Standard_NoNugget.ex \
        GP_RLCM_NoNugget.ex \
        GP_Standard_TestFunction_Scaling.ex \
        GP_RLCM_TestFunction_Scaling.ex \
        GP_RLCM_Multiple_Samples.ex \
        GP_Standard_NoNugget_Same_Field.ex \
        GP_RLCM_NoNugget_Same_Field.ex \
        GP_RLCM_TestFunction_Scaling_Adhoc.ex
else
LINKER += ${CXX}
endif

all: ${EXES}

%.ex: %.o ${OBJS}
	${LINKER} $^ -o $@ ${LIB_PATHS} ${LIBS}

%.o: %.cpp
	${CXX} -c $< ${CXXFLAGS} ${INCL_PATHS}

clean:
	rm -f *.o *~

uninstall:
	rm -rf Makefile *.ex*
